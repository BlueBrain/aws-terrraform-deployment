app {
  description {
    env = "production"
  }

  database {
    read = ${app.defaults.database.access} {
      pool-size = 15
    }
    write = ${app.defaults.database.access} {
      pool-size = 15
    }
    streaming = ${app.defaults.database.access} {
      pool-size = 50
    }

    name     = "nexus_user"
    username = "nexus_user"
    password = "!!! PASSWORD REMOVED !!!"

    tables-autocreate = true
  }

  projections {
    batch {
      max-elements = 500
    }
  }

  defaults {
    database {
      access {
        host = "nexus-db-id.ctydazornca3.us-east-1.rds.amazonaws.com"
        port = 5432
      }
    }

    query {
      batch-size = 30
    }

    pagination {
      size-limit = 2000
    }

    indexing {
      prefix = "nexus"
    }
  }

  fusion {
    enable-redirects = true
    base = "https://sbo-nexus-fusion.shapes-registry.org/nexus/web"
  }

  http {
    interface = 0.0.0.0
    base-uri = "https://sbo-nexus-delta.shapes-registry.org/v1"
  }

  monitoring {
    trace {
      sampler = "never"
    }
  }
}

plugins {
  blazegraph {
    enabled = true
    base = "http://private-alb-blazegraph.shapes-registry.org:9999/blazegraph"
    batch {
      max-elements = 2
    }
  }

  elasticsearch {
    enabled = true
    base = "https://vpc-nexus-2ahuujor4v7ehpnj43lfxcnjpu.us-east-1.es.amazonaws.com"
    batch {
      max-elements = 30
    }
  }

  composite-views {
    enabled = true
    elasticsearch-batch {
      max-elements = 30
    }
    blazegraph-batch {
      max-elements = 2
    }
  }

  graph-analytics {
    enabled = true
    batch = {
      max-elements = 30
    }
  }

  jira {
    enabled = false
    base = "https://bbpteam.epfl.ch/project/issues"
  }

  project-deletion {
    enabled = false
  }

  search {
    enabled = false
    fields = /opt/search-config/fields.json
    indexing {
      context = /opt/search-config/search-context.json
      mapping = /opt/search-config/mapping.json
      settings = /opt/search-config/settings.json
      query = /opt/search-config/construct-query.sparql
      resource-types = /opt/search-config/resource-types.json
    }
    suites = {
      sbo = [
        "public/forge",
        "public/hippocampus",
        "public/hippocampus-hub",
        "public/multi-vesicular-release",
        "public/ngv",
        "public/ngv-anatomy",
        "public/nvg",
        "public/sscx",
        "public/thalamus",
        "public/topological-sampling",
        "bbp/lnmce",
        "bbp/ncmv3",
        "bbp/hippocampus",
        "bbp-external/seu",
        "bbp/mouselight"
      ]
    }
  }

  storage {
    enabled = true
    storages {
      disk {
        default-volume = /opt/disk-storage
      }
      remote-disk {
        enabled = false
        default-endpoint = "http://storage.bbp-ou-nise-production.svc/v1"
      }
    }
  }
}

