# Based on the template at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Terraform.gitlab-ci.yml

include:
  - local: templates/tf/Base.latest.gitlab-ci.yml
  # See https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Terraform/

stages:
  - validate
  - test
  - build
  - deploy
  - configure
  - cleanup

fmt:
  extends: .terraform:fmt
  needs: []

validate:
  extends: .terraform:validate
  needs: []

build:
  extends: .terraform:build

deploy:
  extends: .terraform:deploy
  dependencies:
    - build
  environment:
    name: $TF_STATE_NAME
  artifacts:
    name: bolt-inventory
    paths:
      - ${TF_ROOT}/bolt-inventory.yaml

tfsec:
  image: aquasec/tfsec
  stage: validate
  script:
    - cd "${TF_ROOT}"
    - /usr/bin/tfsec
  allow_failure: false

terrascan:
  image: tenable/terrascan
  stage: validate
  script:
    - terrascan scan -i terraform --iac-version v14 --iac-dir ${TF_ROOT} --non-recursive --skip-rules=AC_AWS_0369

#puppet_bolt:
#  image: puppet/puppet-bolt
#  stage: configure
#  resource_group: ${TF_STATE_NAME}
#  dependencies:
#    - deploy
#  rules:
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#  script:
#    - cat bolt-inventory.yaml
#    - bolt plan show aws_poc -v
#    - bolt plan run aws_poc -v
  
  
